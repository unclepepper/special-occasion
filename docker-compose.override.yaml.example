services:
  traefik:
    restart: "no"
    container_name: ${APP_NAME}-traefik
    ports:
      - ${TRAEFIK_HTTP_PORT:-80}:80
      - ${TRAEFIK_HTTPS_PORT:-443}:443
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=http
      - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
      - traefik.http.routers.traefik.middlewares=redirect
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.middlewares.redirect.redirectscheme.scheme=http
    networks:
      - ${APP_NAME}-network

  php-unit:
    restart: "no"
    build:
      context: .
      args:
        UID: ${DUID:-1000}
        GID: ${DGID:-1000}
      dockerfile: docker/${APP_ENV}/Dockerfile
    container_name: ${APP_NAME}-php-unit
    environment:
      COMPOSER_MEMORY_LIMIT: -1
      COMPOSER_ALLOW_SUPERUSER: 1

    labels:
      - traefik.enable=true
      # http
      - traefik.http.routers.${APP_NAME}-http.entrypoints=http
      - traefik.http.routers.${APP_NAME}-http.rule=Host(`case.localhost`)
      # https
#      - traefik.http.routers.${APP_NAME}-https.entrypoints=https
#      - traefik.http.routers.${APP_NAME}-https.rule=Host(`api.uclepepper.localhost`)
#      - traefik.http.routers.${APP_NAME}-https.tls.certresolver=letsencrypt
#      - traefik.http.routers.${APP_NAME}-http.middlewares=redirect-to-https
#      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
    networks:
      - ${APP_NAME}-network

  database:
    restart: "no"
    image: postgres:${POSTGRES_VERSION:-16.8}-alpine
    container_name: ${APP_NAME}-database
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    networks:
      - ${APP_NAME}-network
    labels:
      - traefik.enable=false

networks:
  case-network:
    driver: bridge
